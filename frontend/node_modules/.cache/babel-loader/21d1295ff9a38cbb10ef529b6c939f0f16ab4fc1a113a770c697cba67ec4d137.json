{"ast":null,"code":"var _jsxFileName = \"/home/maiky/Desktop/Moovy/frontend/src/App.tsx\";\nimport { CssBaseline, StyledEngineProvider, ThemeProvider } from '@mui/material';\n\n// project imports\nimport Routes from 'routes';\nimport themes from 'themes';\n\n// config file\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // handling theme preference\n  if (localStorage.getItem('theme-mode') === null) {\n    localStorage.setItem('theme-mode', 'light');\n  }\n  const themeOption = localStorage.getItem('theme-mode');\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: themes({\n        fontFamily: config.fontFamily,\n        borderRadius: config.borderRadius,\n        navType: themeOption\n      }),\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CssBaseline","StyledEngineProvider","ThemeProvider","Routes","themes","config","App","localStorage","getItem","setItem","themeOption","fontFamily","borderRadius","navType"],"sources":["/home/maiky/Desktop/Moovy/frontend/src/App.tsx"],"sourcesContent":["import { CssBaseline, StyledEngineProvider, ThemeProvider } from '@mui/material';\n\n// project imports\nimport Routes from 'routes';\nimport themes from 'themes';\n\n// config file\nimport config from 'config';\n\nfunction App() {\n  // handling theme preference\n  if (localStorage.getItem('theme-mode') === null) {\n    localStorage.setItem('theme-mode', 'light');\n  }\n  const themeOption = localStorage.getItem('theme-mode');\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider\n        theme={themes({\n          fontFamily: config.fontFamily,\n          borderRadius: config.borderRadius,\n          navType: themeOption\n        })}\n      >\n        <CssBaseline />\n        <Routes />\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,oBAAoB,EAAEC,aAAa,QAAQ,eAAe;;AAEhF;AACA,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,MAAM,MAAM,QAAQ;;AAE3B;AACA,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAE5B,SAASC,GAAG,GAAG;EACb;EACA,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;IAC/CD,YAAY,CAACE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;EAC7C;EACA,MAAMC,WAAW,GAAGH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAEtD,oBACE,QAAC,oBAAoB;IAAC,WAAW;IAAA,uBAC/B,QAAC,aAAa;MACZ,KAAK,EAAEJ,MAAM,CAAC;QACZO,UAAU,EAAEN,MAAM,CAACM,UAAU;QAC7BC,YAAY,EAAEP,MAAM,CAACO,YAAY;QACjCC,OAAO,EAAEH;MACX,CAAC,CAAE;MAAA,wBAEH,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACf,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACK;AAE3B;AAAC,KArBQJ,GAAG;AAuBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}