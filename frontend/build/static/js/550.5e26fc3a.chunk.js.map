{"version":3,"file":"static/js/550.5e26fc3a.chunk.js","mappings":"yOAoEA,UA3DkB,WAChB,IAAMA,GAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAEpC,GAA8BC,EAAAA,EAAAA,UAAyB,MAAK,eAArDC,EAAO,KAAEC,EAAU,KAEpBC,EAAWC,EAAAA,GAAAA,OAAa,CAC5BC,QAASC,kEAGLC,EAAe,SAACC,GACpBL,EAASM,OAAO,YAAa,CAAEC,KAAM,CAAEC,OAAQH,EAAMG,UAClDC,MAAK,WACJ,IAAMC,EAAwB,OAAPZ,QAAO,IAAPA,OAAO,EAAPA,EAASa,QAAO,SAACC,GAAM,OAAKA,EAAOJ,SAAWH,EAAMG,MAAM,IAEjE,OAAhBd,QAAgB,IAAhBA,GAAAA,EAAkBmB,aAAY,EAAOR,EAAMS,OAC3Cf,EAAyB,OAAdW,QAAc,IAAdA,EAAAA,EAAkBZ,EAC/B,IACCiB,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAIF,EAAI,GACpC,EAgBA,OAdAG,EAAAA,EAAAA,YAAU,WACRnB,EAASoB,IAAI,cAAcX,MAAK,SAACY,GAC/B,GAAIA,EAASd,KAAKe,OAAS,EAAG,OAAOvB,EAAW,MAEhD,IAAMQ,EAAgBc,EAASd,KAE/BR,EACEQ,EAAKgB,KAAI,SAACX,GACR,OAAO,kBAAKA,GAAM,IAAEY,WAAW,GACjC,IAEJ,GACF,GAAG,KAGD,UAAC,IAAS,YACR,SAAC,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,eAAe,gBAAe,UAC9D,SAAC,IAAU,CAACC,QAAQ,KAAI,2BAG1B,UAAC,KAAI,CAACC,WAAS,EAACC,QAAS,EAAE,WACvBjC,IACA,UAAC,IAAG,CAACkC,MAAM,QAAQL,QAAQ,OAAOM,cAAc,SAASC,WAAW,SAASC,GAAG,OAAM,WACpF,SAAC,IAAK,KACN,SAAC,IAAU,CAACN,QAAQ,QAAO,wHAMvB,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASyB,KAAI,SAAClB,GAAK,OAClB,SAAC,KAAI,CAAC+B,MAAI,EAAoBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE,UACjD,SAAC,IAAQ,CAACC,UAAWnC,EAAOD,aAAcA,KAD5BC,EAAMG,OAEf,SAKjB,C","sources":["views/MyLibrary/index.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Box, Container, Grid, Typography } from '@mui/material';\nimport axios from 'axios';\n// project imports\nimport { Movie } from '@custom-types/movie';\nimport Glass from 'ui-component/Glass';\nimport MainCard from 'ui-component/MainCard';\nimport { CustomizationContext } from 'context/CustomizationContext';\n\nconst MyLibrary = () => {\n  const ContextComponent = useContext(CustomizationContext);\n\n  const [results, setResults] = useState<Movie[] | null>(null);\n\n  const MoovyApi = axios.create({\n    baseURL: process.env.REACT_APP_MOOVY_API\n  });\n\n  const handleToggle = (movie: Movie) => {\n    MoovyApi.delete('api/movie', { data: { imdbID: movie.imdbID } })\n      .then(() => {\n        const resultsUpdated = results?.filter((result) => result.imdbID !== movie.imdbID);\n\n        ContextComponent?.handleAlert(false, movie.Title);\n        setResults(resultsUpdated ?? results);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    MoovyApi.get('api/movies').then((snapshot) => {\n      if (snapshot.data.length < 1) return setResults(null);\n\n      const data: Movie[] = snapshot.data;\n\n      setResults(\n        data.map((result) => {\n          return { ...result, onLibrary: true };\n        })\n      );\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Box mb={3} pr={2} display='flex' justifyContent='space-between'>\n        <Typography variant='h1'>My Library</Typography>\n      </Box>\n\n      <Grid container spacing={2}>\n        {!results && (\n          <Box width='300px' display='flex' flexDirection='column' alignItems='center' mx='auto'>\n            <Glass />\n            <Typography variant='body2'>\n              It looks like there are no movies in your library! Search for a movie you have watched\n              and add it here!\n            </Typography>\n          </Box>\n        )}\n        {results?.map((movie) => (\n          <Grid item key={movie.imdbID} xs={12} sm={6} md={3}>\n            <MainCard movieData={movie} handleToggle={handleToggle} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\nexport default MyLibrary;\n"],"names":["ContextComponent","useContext","CustomizationContext","useState","results","setResults","MoovyApi","axios","baseURL","process","handleToggle","movie","delete","data","imdbID","then","resultsUpdated","filter","result","handleAlert","Title","catch","err","console","log","useEffect","get","snapshot","length","map","onLibrary","mb","pr","display","justifyContent","variant","container","spacing","width","flexDirection","alignItems","mx","item","xs","sm","md","movieData"],"sourceRoot":""}