{"version":3,"file":"static/js/408.ffa3c206.chunk.js","mappings":"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","sources":["views/Search/index.tsx"],"sourcesContent":["import SearchBar from '@mkyy/mui-search-bar';\nimport { Box, Container, Grid, Typography } from '@mui/material';\nimport axios, { AxiosPromise } from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport MainCard from 'ui-component/MainCard';\nimport { Movie } from '@custom-types/movie';\n// images\nimport Glass from 'ui-component/Glass';\nimport { CustomizationContext } from 'context/CustomizationContext';\n\nconst Search = () => {\n  const [results, setResults] = useState<Movie[] | null>(null);\n  const [filter, setFilter] = useState<string | null | undefined>(null);\n\n  const ContextComponent = useContext(CustomizationContext);\n\n  const api = axios.create({\n    baseURL: process.env.REACT_APP_BASEURL\n  });\n\n  const MoovyApi = axios.create({\n    baseURL: process.env.REACT_APP_MOOVY_API\n  });\n\n  const handleToggle = (movie: Movie) => {\n    if (movie.onLibrary)\n      return MoovyApi.delete('api/movie', { data: { imdbID: movie.imdbID } })\n        .then(() => {\n          const resultsUpdated = results?.map((result) => {\n            if (result.imdbID !== movie.imdbID) return result;\n\n            return { ...result, onLibrary: false };\n          });\n          ContextComponent?.handleAlert(false, movie.Title);\n          setResults(resultsUpdated ?? results);\n        })\n        .catch((err) => console.log(err));\n\n    MoovyApi.post('api/movie', {\n      Title: movie.Title,\n      Poster: movie.Poster,\n      Year: movie.Year,\n      imdbRating: movie.imdbRating,\n      imdbID: movie.imdbID\n    }).catch((err) => console.log(err));\n\n    const resultsUpdated = results?.map((result) => {\n      if (result.imdbID !== movie.imdbID) return result;\n\n      return { ...result, onLibrary: true };\n    });\n\n    ContextComponent?.handleAlert(true, movie.Title);\n    setResults(resultsUpdated ?? results);\n  };\n\n  useEffect(() => {\n    if (filter === null || filter === undefined) return setResults(null);\n\n    api\n      .get(`?apikey=${process.env.REACT_APP_APIKEY}&s=${filter}&type=movie`)\n      .then(async (snapshot) => {\n        const data: Movie[] = snapshot.data.Search;\n        const favorites: Movie[] = [];\n        const requests: Promise<AxiosPromise<any>>[] = [];\n        const res: Array<any> = [];\n\n        await MoovyApi.get('api/movies').then((snapshot) => {\n          const myLibraryMovies: Movie[] = snapshot.data;\n\n          myLibraryMovies.forEach((movie) => {\n            favorites.push(movie);\n          });\n        });\n\n        // requesting each movie details to get imdb Rating, that doesn't come on search request.\n        data.forEach((movie) => {\n          requests.push(api.get(`?apikey=${process.env.REACT_APP_APIKEY}&i=${movie.imdbID}`));\n        });\n\n        await Promise.all(requests).then((snapshot) => {\n          snapshot.forEach((movie) => {\n            let isOnLibrary = false;\n            const onLibraryMovie = favorites.find(\n              (movieFromLibrary) => movieFromLibrary.imdbID === movie.data.imdbID\n            );\n\n            if (onLibraryMovie !== undefined) {\n              isOnLibrary = true;\n            }\n\n            res.push({ ...movie.data, onLibrary: isOnLibrary });\n          });\n        });\n        setResults(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [filter]);\n\n  return (\n    <Container>\n      <Box mb={3} pr={2} display='flex' justifyContent='space-between'>\n        <Typography variant='h1'>Search</Typography>\n        <SearchBar\n          value={filter}\n          onChange={(value: string) => setFilter(value)}\n          onCancelResearch={() => setFilter(null)}\n        />\n      </Box>\n\n      <Grid container spacing={2}>\n        {!results && (\n          <Box width='300px' display='flex' flexDirection='column' alignItems='center' mx='auto'>\n            <Glass />\n            <Typography variant='body2'>\n              We couldnÂ´t find the movies you were lookin for :({' '}\n            </Typography>\n          </Box>\n        )}\n        {results?.map((movie) => (\n          <Grid item key={movie.imdbID} xs={12} sm={6} md={3}>\n            <MainCard movieData={movie} handleToggle={handleToggle} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\nexport default Search;\n"],"names":["useState","results","setResults","filter","setFilter","ContextComponent","useContext","CustomizationContext","api","axios","baseURL","process","MoovyApi","handleToggle","movie","onLibrary","delete","data","imdbID","then","resultsUpdated","map","result","handleAlert","Title","catch","err","console","log","post","Poster","Year","imdbRating","useEffect","undefined","get","snapshot","Search","favorites","requests","res","forEach","push","Promise","all","isOnLibrary","find","movieFromLibrary","error","mb","pr","display","justifyContent","variant","value","onChange","onCancelResearch","container","spacing","width","flexDirection","alignItems","mx","item","xs","sm","md","movieData"],"sourceRoot":""}